@model Codebucket.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<section class="row" id="changePassword">


    @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "col s12", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="wrap">

            <h2>@ViewBag.Title.</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="input-field col s12">
                <i class="material-icons prefix">lock_open</i>
                @Html.PasswordFor(m => m.OldPassword, new { @class = "validate" })
                @Html.LabelFor(m => m.OldPassword, new { @class = "active control-label" })

                <div class="col-md-10">
                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "validate" })
                </div>
            </div>

            <div class="input-field col s12">
                <i class="material-icons prefix">vpn_key</i>
                @Html.PasswordFor(m => m.NewPassword, new { @class = "validate" })
                @Html.LabelFor(m => m.NewPassword, new { @class = "active" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "validate" })
                </div>
            </div>
            <div class="input-field col s12">
                <i class="material-icons prefix">vpn_key</i>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "validate" })
                 @Html.LabelFor(m => m.ConfirmPassword, new { @class = "active" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "validate" })
                </div>
            </div>
            <div class="input-field col s8">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change password" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
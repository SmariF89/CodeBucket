@model Codebucket.Models.ViewModels.ProjectViewModel
@using Codebucket.Models.ViewModels

@{ 
    ViewBag.Title = "Project Overview";
}

<h2>Project: @Model._projectName</h2>
<h3>Project Owner: @Model._projectOwnerName</h3>

<div class="collection">
    <ul>
        <li class="collection-header"><h4>Project files</h4></li>
        @foreach (ProjectFileViewModel item in Model._projectFiles)
        {
            <li>
                @Html.ActionLink(item._projectFileName, "updateProjectFile", new { id = item._id }, new { @class = "collection-item" })
                
                @if (Model._isProjectOwner == true && Model._projectFiles.Count > 1)
                {
                    @Html.ActionLink("Delete file", "deleteProjectFile", new { id = item._id }, new { @class = "btn btn-default" })
                }
            </li>
        }
    </ul>
</div>

<ul class="collection with-header">
    <li class="collection-header"><h4>Project members</h4></li>
    @foreach (ProjectMemberViewModel item in Model._projectMembers)
    {
        <li class="collection-item">
            
            @Html.DisplayFor(modelItem => item._userName)
            
        </li>
    }
</ul>

    <br />
<div class="FileDisplayContainer">
    @if (Model._isProjectOwner == true)
    {

        <div class="AddFileDisplay">
            @Html.ActionLink("Add file", "createNewProjectFile", new { id = Model._id }, new { @class = "waves-effect waves-light btn" })
        </div>

        <div class="AddMemberDisplay">
            @Html.ActionLink("Add member", "addProjectMember", new { id = Model._id }, new { @class = "waves-effect waves-light btn" })
        </div>

        <div class="BackDisplayProject">
            @Html.ActionLink("Back", "../Project/Index", null, new { @class = "waves-effect waves-light btn" })
        </div>
    }
    else
    {
        <div class="BackDisplayProject">
            @Html.ActionLink("Back", "../Project/Index", null, new { @class = "waves-effect waves-light btn" })
        </div>
    }
</div>
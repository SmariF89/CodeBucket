@model Codebucket.Models.ViewModels.ProjectFileViewModel
<head>
	<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
</head>

@Model._projectFileName

@*link to the ace website: https://ace.c9.io/#nav=embedding*@
<h2>ACE in Action</h2>

<div class="form-group">
	<label for="theme" class="control-label">Theme:</label>
	<select id="theme" class="form-control">
		<option value="ambiance">ambiance</option>
		<option value="chrome" selected>chrome</option>
		<option value="clouds">clouds</option>
		<option value="clouds_midnight">clouds_midnight</option>
		<option value="github">github</option>
		<option value="monokai">monokai</option>
		<option value="xcode">xcode</option>
	</select>

	<label for="mode" class="control-label">Language Mode:</label>
	<select id="mode" class="form-control">
		<option value="javascript">javascript</option>
		<option value="html">html</option>
	</select>
</div>

@*This is where Ace is shown*@
<div id="editor"></div>

<form method="post">
	@Html.EditorFor(model => model._id, new { htmlAttributes = new { @class = "form-control" } })
	@*@Html.EditorFor(model => model._projectFileName, new { htmlAttributes = new { @class = "form-control" } })
		@Html.EditorFor(model => model._projectFileType, new { htmlAttributes = new { @class = "form-control" } })
		@Html.EditorFor(model => model._projectID, new { htmlAttributes = new { @class = "form-control" } })*@

	<textarea name="editor">@Model._projectFileData</textarea>
	@Html.EditorFor(model => model._projectFileData, new { htmlAttributes = new { @class = "form-control" } })
	<button type="submit">Save</button>
</form>

<script src="~/Ace/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script type="text/javascript">

	var editor = (function () {
		var aceEditor = ace.edit("editor");
		// default theme
		aceEditor.setTheme("ace/theme/chrome");
		// default mode
		aceEditor.getSession().setMode("ace/mode/javascript");
		return aceEditor;
	})();

	$('#theme').change(function () {
		var e = document.getElementById("theme");
		var strTheme = e.options[e.selectedIndex].value;
		editor.setTheme("ace/theme/" + strTheme);
	});

	$('#mode').change(function () {
		var e = document.getElementById("mode");
		var strMode = e.options[e.selectedIndex].value;
		editor.getSession().setMode("ace/mode/" + strMode);
	});

	var textarea = $('textarea[name="editor"]')
	editor.getSession().setValue(textarea.val());
	editor.getSession().on('change', function () {
		textarea.val(editor.getSession().getValue());
	});

</script>